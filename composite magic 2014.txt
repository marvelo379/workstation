A Composite Magic number is a positive integer which is composite as well as a magic number.
Composite number: A composite number is a number that has more than two factors.
For example: 10
Factors are: 1, 2, 5, 10
Magic number: A magic number is a number in which the eventual sum of the digits is equal to 1.
For example: 28=2+8=10=1+0=1

import java.util.*;
class MagicComposite
{  
    boolean isComposite(int n)
    {
        int count=0;
        for(int i=1;i<=n;i++)
        {
            if(n%i==0)
                count++;
        }
        if(count>2)
            return true;
        else
            return false;
    }
    int sumDig(int n)
    {
        int s = 0;
        while(n>0)
        {
            s = s + n%10;
            n = n/10;
        }
        return s;
    }
    
    boolean isMagic(int n)
    {
        int a = sumDig(n);
        while(a>9)
        {
            a = sumDig(a);
        }
        if(a == 1)
            return true;
        else
            return false;
    }
  void main()
    {
  MagicComposite ob=new MagicComposite();
  Scanner sc=new Scanner(System.in);
 System.out.print("Enter the lower limit(m):");
 int m=sc.nextInt();
 System.out.print("Enter the upper limit(n):");
 int n=sc.nextInt();
 	int c=0;
        	if (m<n)
        	{
            	System.out.println("The Composite Magic Integers are:");
            	for(int i=m; i<=n; i++)
            	{
                if(ob.isComposite(i)==true && ob.isMagic(i)==true)
                	{
                    if (c==0) 
                        System.out.print(i);
                    else
                        System.out.print(", "+i);
                    c++;
                }
            }
         System.out.println("The frequency of Composite Magic Integers is :"+c);
        }
        else
            System.out.println("OUT OF RANGE");
    }
}

